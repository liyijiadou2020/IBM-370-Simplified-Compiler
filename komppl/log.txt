

 --------------------------------------- 2024-04-17 12:39:50 ---------------------------
---> void compress_ISXTXT()
Text after compress:
EX10:PROC OPTIONS(MAIN);DCL A BIN FIXED(31)INIT(11B);END EX10;

---> void build_TPR()
---> int sint_ANAL()
---> int gen_COD()
>>>>>>>>>>>>>>>>>>>>> First pass of semantic calculation <<<<<<<<<<<<<<<<<<<<<
BUK1
>> 0/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE1
>> 1/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
BUK1
>> 2/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE1
>> 3/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF1
>> 4/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE1
>> 5/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF1
>> 6/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE1
>> 7/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
IPR1
>> 8/32 
>> idx_of_VXOD, operation code: IPR, get from table: 5
OPR1
>> 9/32 
>> idx_of_VXOD, operation code: OPR, get from table: 11
BUK1
>> 10/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE1
>> 11/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF1
>> 12/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
RZR1
>> 13/32 
>> idx_of_VXOD, operation code: RZR, get from table: 13
CIF1
>> 14/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
RZR1
>> 15/32 
>> idx_of_VXOD, operation code: RZR, get from table: 13
MAN1
>> 16/32 
>> idx_of_VXOD, operation code: MAN, get from table: 7
MAN1
>> 17/32 
>> idx_of_VXOD, operation code: MAN, get from table: 7
LIT1
>> 18/32 
>> idx_of_VXOD, operation code: LIT, get from table: 6
ODC1
>> 19/32 
>> idx_of_VXOD, operation code: ODC, get from table: 8
TEL1
>> 20/32 
>> idx_of_VXOD, operation code: TEL, get from table: 14
BUK1
>> 21/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE1
>> 22/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
BUK1
>> 23/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE1
>> 24/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF1
>> 25/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE1
>> 26/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF1
>> 27/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE1
>> 28/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
IPR1
>> 29/32 
>> idx_of_VXOD, operation code: IPR, get from table: 5
OEN1
>> 30/32 
>> idx_of_VXOD, operation code: OEN, get from table: 9
PRO1
>> 31/32 
>> idx_of_VXOD, operation code: PRO, get from table: 12
>>>>>>>>>>>>>>>>>>>>> Second pass of semantic calculation <<<<<<<<<<<<<<<<<<<<<
BUK2
>> 0/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE2
>> 1/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
BUK2
>> 2/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE2
>> 3/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF2
>> 4/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE2
>> 5/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF2
>> 6/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE2
>> 7/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
IPR2
>> 8/32 
>> idx_of_VXOD, operation code: IPR, get from table: 5
OPR2
---> void ZKARD()
IASSTXT = 0
ASS_CARD.BUFCARD = EX10     START 0            Program starts <--- 
---> void ZKARD()
IASSTXT = 1
ASS_CARD.BUFCARD =          BALR  RBASE,0      Load base register <--- 
---> void ZKARD()
IASSTXT = 2
ASS_CARD.BUFCARD =          USING *,RBASE      Set base register <--- 
>> 9/32 
>> idx_of_VXOD, operation code: OPR, get from table: 11
BUK2
>> 10/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE2
>> 11/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF2
>> 12/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
RZR2
>> 13/32 
>> idx_of_VXOD, operation code: RZR, get from table: 13
CIF2
>> 14/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
RZR2
>> 15/32 
>> idx_of_VXOD, operation code: RZR, get from table: 13
MAN2
>> 16/32 
>> idx_of_VXOD, operation code: MAN, get from table: 7
MAN2
>> 17/32 
>> idx_of_VXOD, operation code: MAN, get from table: 7
LIT2
>> 18/32 
>> idx_of_VXOD, operation code: LIT, get from table: 6
ODC2
>> 19/32 
>> idx_of_VXOD, operation code: ODC, get from table: 8
TEL2
>> 20/32 
>> idx_of_VXOD, operation code: TEL, get from table: 14
BUK2
>> 21/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE2
>> 22/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
BUK2
>> 23/32 
>> idx_of_VXOD, operation code: BUK, get from table: 1
IDE2
>> 24/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF2
>> 25/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE2
>> 26/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
CIF2
>> 27/32 
>> idx_of_VXOD, operation code: CIF, get from table: 2
IDE2
>> 28/32 
>> idx_of_VXOD, operation code: IDE, get from table: 3
IPR2
>> 29/32 
>> idx_of_VXOD, operation code: IPR, get from table: 5
OEN2
---> void ZKARD()
IASSTXT = 3
ASS_CARD.BUFCARD =          BCR   15,14        Exit from program <--- 
---> void ZKARD()
IASSTXT = 4
ASS_CARD.BUFCARD = A        DC    F'3.'        Defination of var <--- 
---> void ZKARD()
IASSTXT = 5
ASS_CARD.BUFCARD = RBASE    EQU   15                                                               BUK <--- 
---> void ZKARD()
IASSTXT = 6
ASS_CARD.BUFCARD = RRAB     EQU   5                                                                BUK <--- 
---> void ZKARD()
IASSTXT = 7
ASS_CARD.BUFCARD =          END   EX10         End of program <--- 
>> 30/32 
>> idx_of_VXOD, operation code: OEN, get from table: 9
PRO2

SYNTAX ANALYZE FINISHED! NOW PRINTING IASSTXT...  
IASSTXT(lines) = 8
--------- ASS ---------> 

0	EX10     START 0            Program starts
1	         BALR  RBASE,0      Load base register
2	         USING *,RBASE      Set base register
3	         BCR   15,14        Exit from program
4	A        DC    F'3.'        Defination of var
5	RBASE    EQU   15                                                               RRAB     EQU   5                                                                         END   EX10         End of program
6	RRAB     EQU   5                                                                         END   EX10         End of program
7	         END   EX10         End of program

<------------ASS ------

>> 31/32 
>> idx_of_VXOD, operation code: PRO, get from table: 12
